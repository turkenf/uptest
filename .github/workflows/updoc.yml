name: Updoc

on:
  workflow_call:
    inputs:
      provider:
        description: 'The name of the provider, e.g. provider-aws'
        required: true
        type: string
      version:
        description: 'The version you would like the release to have, e.g. v0.1.0'
        required: true
        type: string
    secrets:
      UPBOUND_CI_PROD_BUCKET_SA:
        required: true
      UPBOUND_BOT_GITHUB_TOKEN:
        required: true

env:
  GO_VERSION: '1.19'

jobs:
  upload:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          ref: '${{ inputs.version }}'

      # TODO(turkenf): remove once there is no private dependency
      - name: Granting private modules access
        run: |
          git config --global url."https://${{ secrets.UPBOUND_BOT_GITHUB_TOKEN }}:x-oauth-basic@github.com/upbound".insteadOf "https://github.com/upbound"

      - name: Checkout Updoc
        uses: actions/checkout@v2
        with:
          repository: upbound/upjet
          path: './updoc'
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Find the Go Build Cache
        id: go
        run: echo "cache=$(make go.cachedir)" >> $GITHUB_OUTPUT

      - name: Cache the Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go.outputs.cache }}
          key: ${{ runner.os }}-build-updoc-artifacts-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-updoc-artifacts-

      - name: Cache Go Dependencies
        uses: actions/cache@v3
        with:
          path: .work/pkg
          key: ${{ runner.os }}-updoc-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-updoc-pkg-

      - name: My step 2
        run: ls -la
      - name: My step 3
        run: |
          cd updoc/
          ls -la

      - name: Create Service Account File
        env:
          GAC: ${{ secrets.UPBOUND_CI_PROD_BUCKET_SA }}
        run: |
          echo "${GAC}" > sa.json

      - name: Upload Docs
        env:
          GOOGLE_APPLICATION_CREDENTIALS: sa.json
        run: |
          pwd
          ls provider/docs
          VERSION=$(echo ${{ inputs.version }} | cut -d '.' -f 1,2)
          echo "Provider: ${{ inputs.provider }}, Version: ${{ inputs.version }}"
          echo go run ./cmd/main.go upload --docs-dir=provider/docs --name=${{ inputs.provider }} --version=$VERSION --bucket-name=bucket-marketplace-docs-production --cdn-domain=https://user-content.upbound.io
